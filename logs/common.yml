version: '3.8'
services:
  node_exporter:
    container_name: node_exporter
    restart: always
    build: ./node_exporter
    expose:
      - "9100"
    networks:
      - prometheus-network
    healthcheck:
      test: 
        [
          "CMD-SHELL", 
          "wget -qO- http://localhost:9100",
        ]
      interval: 10s
      retries: 10
      timeout: 10s

  #alertmanager:
  #  image: prom/alertmanager:v0.27.0
  #  restart: always
  #  expose:
  #    - "9093"
  #  networks:
  #    - prometheus-network
  #  volumes:
  #    - "./alertmanager:/config"
  #    - alertmanager-data:/data
  #  command: --config.file=/config/alertmanager.yml --log.level=debug
  #

  postgres_exporter:
    container_name: postgres_exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    entrypoint: /run/postgres_exporter.sh
    user: "0"
    networks:
      - prometheus-network
      - postgres_exporter-network
      - vault_network_logs
    volumes:
      #- ./postgres_exporter/postgres_exporter.yml:/etc/postgres_exporter.yml:ro
      - ./postgres_exporter/postgres_exporter.sh:/run/postgres_exporter.sh
      - vault_postgresExporter:/opt 
      - vault_hostname:/opt/host
    expose:
      - "9187"
    restart: always
    depends_on:
       postgres_users:
        condition: service_healthy   

  prometheus:
    container_name: prometheus
    restart: always
    build: ./prometheus
    expose:
      - "9090"
    volumes:
      - prometheus:/data
    networks:
      - prometheus-network
      - grafana-network
      - nginx
    depends_on:
      node_exporter:
        condition: service_started
      postgres_exporter:
        condition: service_started
    healthcheck:
      test: 
        [
          "CMD-SHELL", 
          "wget -qO- http://localhost:9090",
        ]
      interval: 10s
      retries: 10
      timeout: 10s


  grafana:
    container_name: grafana
    restart: always
    build: ./grafana
    expose:
      - "3000"
    networks:
      - grafana-network
      - nginx
      - vault_network_logs
    volumes:
      - grafana-data:/usr/share/grafana/data
      - grafana-conf:/usr/share/grafana/conf
      - vault_grafana:/opt
    depends_on:
      vault:
        condition: service_healthy
    healthcheck:
      test: 
        [
          "CMD-SHELL", 
          "wget -qO- http://grafana:3000/api/health",
        ]
      interval: 10s
      retries: 10
      timeout: 10s


networks:
  prometheus-network:
    driver: bridge 
  
  grafana-network:
    driver: bridge 

  postgres_exporter-network:
    driver: bridge

volumes:
  prometheus:
  grafana-data:
  grafana-conf:
  alertmanager-data:




